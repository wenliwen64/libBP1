%% This script performs a spectral analysis of a series of sine waves% General scheme adapted from Muller and MacDonald, 2001, Ice Ages and Astronomical Causes% Muller's group at Berkeley: http://muller.lbl.gov/%clearclose all% creates a time vector starting at 0, going to 600.t = [0:600]';% create sine waves with various periods (and amplitudes)T1 = 25; A1 = 0.1;T2 = 40; A2 = 0.2;T3 = 50; A3 = 0.1;r = (A1*sin(2*pi*t/T1)) + (A2*sin(2*pi*t/T2)) + (A3*sin(2*pi*t/T3));% subtract the mean -- this tends to minimize long-term trends in the datar = r - mean(r);% plots the data in the time domainfigure; plot(t,r); xlabel(' time'); ylabel(' amplitude');% now we get to the meat of the routine% calculate FFT and Power after paddingnpt = 2^14; % this is the number of points, used below to pad the data vector with zeros% so that the fast fourier transform routine runs faster. this number should be at  % least 10 times as large as the length of your data setH = fft(r,npt);% this calls the fft routine that is built into Matlab and puts the result% in a vector that contains the complex fourier amplitudes, consisting% of real amplitudes and phase% next we calculate what is called the Fourier power% this gets rid of the imaginary part by multiplying every component of H by its complex conjugateP = H.*conj(H);% calculate frequency array -- assign frequencies to the PowersNyquist = 0.5/(t(2)-t(1));      % the Nyquist frequency is the frequency resolutionf = linspace(0,Nyquist,npt/2);  % this creates a vector with the first half of% the frequencies -- there is ususally nothing of importance in the other half% normalize the Power -- this is just a conventionP = P/mean(P(1:npt/2));%-------------% plotfmax = 0.1; % this reduces the frequencies that will be plottednum = round(npt/2*fmax/Nyquist); % used to reduce the Power so that freq and power% are the same length, allowing them to be plotted against one anotherfigure; % this creates a new figure windowplot(f(1:num),P(1:num)) % plots frequency on the x and Power on the yxlabel('frequency');ylabel('spectral power');mark    % this calls a routine that will print the period (1/f)         % anywhere you click the mouse in the graph.%=========================================================